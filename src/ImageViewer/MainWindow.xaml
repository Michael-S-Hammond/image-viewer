<Window x:Class="ImageViewer.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:models="clr-namespace:ImageViewer.Models"
        xmlns:local="clr-namespace:ImageViewer"
        Title="{Binding WindowTitle}" Height="600" Width="800"
        KeyDown="Window_KeyDown"
        WindowStartupLocation="CenterScreen"
        Background="{DynamicResource BackgroundBrush}">
    <Grid Background="{DynamicResource BackgroundBrush}">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        
        <!-- Menu Bar -->
        <Menu Grid.Row="0">
            <MenuItem Header="_File">
                <MenuItem Name="MenuOpenFolder" Header="_Open Folder..." Click="MenuItem_OpenFolder_Click" InputGestureText="Ctrl+O"/>
                <MenuItem Header="_Sort By">
                    <MenuItem Name="MenuSortName" Header="By _Name" Click="MenuItem_SortName_Click" IsCheckable="True" IsChecked="True" InputGestureText="Ctrl+1"/>
                    <MenuItem Name="MenuSortDate" Header="By _Date" Click="MenuItem_SortDate_Click" IsCheckable="True" IsChecked="False" InputGestureText="Ctrl+2"/>
                    <MenuItem Name="MenuSortRandom" Header="By _Random" Click="MenuItem_SortRandom_Click" IsCheckable="True" IsChecked="False" InputGestureText="Ctrl+3"/>
                </MenuItem>
                <MenuItem Name="MenuExit" Header="E_xit" Click="MenuItem_Exit_Click" InputGestureText="Alt+F4"/>
            </MenuItem>
            <MenuItem Header="_Theme">
                <MenuItem Name="MenuDarkTheme" Header="_Dark" Click="MenuItem_Dark_Click" IsCheckable="True" IsChecked="True"/>
                <MenuItem Name="MenuLightTheme" Header="_Light" Click="MenuItem_Light_Click" IsCheckable="True" IsChecked="False"/>
                <MenuItem Name="MenuEnergyTheme" Header="_Energy" Click="MenuItem_Energy_Click" IsCheckable="True" IsChecked="False"/>
            </MenuItem>
        </Menu>
        
        <!-- Top Control Bar -->
        <StackPanel Grid.Row="1" Orientation="Horizontal" Style="{DynamicResource TopBarStyle}" Margin="5">
        </StackPanel>
        
        <!-- Main Image Display Area -->
        <Border Grid.Row="2" Background="Black" Margin="5">
            <Grid>
                <Viewbox Stretch="Uniform" Name="ImageViewbox" 
                         Visibility="{Binding IsStaticImage, Converter={StaticResource BooleanToVisibilityConverter}}">
                    <Image Name="MainImage" Source="{Binding CurrentImageSource}" 
                           RenderOptions.BitmapScalingMode="HighQuality"/>
                </Viewbox>
                <Viewbox Stretch="Uniform" Name="GifViewbox"
                         Visibility="{Binding IsAnimatedGif, Converter={StaticResource BooleanToVisibilityConverter}}">
                    <MediaElement Name="GifPlayer" Source="{Binding CurrentGifSource}" 
                                  LoadedBehavior="Play" UnloadedBehavior="Manual"
                                  MediaEnded="GifPlayer_MediaEnded"/>
                </Viewbox>
                <Viewbox Stretch="Uniform" Name="VideoViewbox"
                         Visibility="{Binding IsVideo, Converter={StaticResource BooleanToVisibilityConverter}}">
                    <MediaElement Name="VideoPlayer" Source="{Binding CurrentVideoSource}" 
                                  LoadedBehavior="Manual" UnloadedBehavior="Manual"
                                  MediaOpened="VideoPlayer_MediaOpened"
                                  MediaEnded="VideoPlayer_MediaEnded"/>
                </Viewbox>
            </Grid>
        </Border>
        
        <!-- Bottom Controls -->
        <StackPanel Grid.Row="3" Orientation="Vertical" HorizontalAlignment="Center" Margin="5" 
                    Style="{DynamicResource BottomControlsStyle}">
            <!-- Navigation Controls -->
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Margin="0,0,0,5">
                <Button Name="BtnPrevious" Content="← Previous" Click="BtnPrevious_Click" 
                        IsEnabled="{Binding CanNavigatePrevious}"/>
                <TextBlock VerticalAlignment="Center" Margin="10,0">
                    <Run Text="{Binding CurrentImageIndex, Mode=OneWay}"/>
                    <Run Text=" of "/>
                    <Run Text="{Binding TotalImages, Mode=OneWay}"/>
                </TextBlock>
                <Button Name="BtnNext" Content="Next →" Click="BtnNext_Click" 
                        IsEnabled="{Binding CanNavigateNext}"/>
                <Button Name="BtnReverse" Content="🔄 Reverse" Click="BtnReverse_Click" 
                        IsEnabled="{Binding HasImages}"
                        ToolTip="Reverse the order of images"/>
            </StackPanel>
            
            <!-- Video Controls -->
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" 
                        Visibility="{Binding HasLoopableContent, Converter={StaticResource BooleanToVisibilityConverter}}">
                <Button Name="BtnPlay" Content="▶ Play" Click="BtnPlay_Click" Margin="5,0"
                        Visibility="{Binding IsVideo, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                <Button Name="BtnPause" Content="⏸ Pause" Click="BtnPause_Click" Margin="5,0"
                        Visibility="{Binding IsVideo, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                <Button Name="BtnStop" Content="⏹ Stop" Click="BtnStop_Click" Margin="5,0"
                        Visibility="{Binding IsVideo, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                <CheckBox Name="ChkLoop" Content="Loop" VerticalAlignment="Center" Margin="10,0"
                          IsChecked="{Binding IsLoopEnabled}" 
                          ToolTip="Loop animated content"/>
            </StackPanel>
            
            <!-- Current Folder Display -->
            <TextBlock Name="TxtCurrentFolder" HorizontalAlignment="Center" Margin="10,5,10,0" 
                       Text="{Binding CurrentFolderPath}" FontWeight="Bold"
                       Visibility="{Binding HasImages, Converter={StaticResource BooleanToVisibilityConverter}}"/>
        </StackPanel>
    </Grid>
</Window>